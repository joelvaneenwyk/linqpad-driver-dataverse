# https://taskfile.dev

version: "3"

vars:
  BUILD_DIR: "{{.TASKFILE_DIR}}/.build"
  SOURCE_DIR: "{{.TASKFILE_DIR}}"
  PROJECT_DIR: "{{.TASKFILE_DIR}}"
  RM: '{{if eq .OS "Windows_NT"}}cmd /d /c rmdir /q /s{{else}}rm -rf{{end}}'
  COPY: '{{if eq .OS "Windows_NT"}}cmd /d /c copy /Y /B{{else}}cp{{end}}'
  PACKAGE_MANAGER: '{{if eq .OS "Windows_NT"}}scoop{{else}}apt{{end}}'
  INSTALL: "{{.PACKAGE_MANAGER}} install"
  UPDATE: "{{.PACKAGE_MANAGER}} update"
  PROJECT_NAME: NY.Dataverse.LINQPadDriver
  PROJECT_SOURCE_ROOT: src
  TEST_PROJECT: src/MarkMpn.FetchXmlToWebAPI/MarkMpn.FetchXmlToWebAPI.Tests/MarkMpn.FetchXmlToWebAPI.Tests.csproj

tasks:
  default:
    deps: [init, clean]
    cmds:
      - task: build
    silent: false

  build:
    dotenv: [".env"]
    cmds:
      # - cmd: 'dotnet build -c Release -p:Platform="Any CPU" "src/{{.PROJECT_NAME}}/{{.PROJECT_NAME}}.csproj"'
      - cmd: 'dotnet publish -o "${NUGET_PACKAGE_PATH:-{{.PROJECT_DIR}}/.deploy}" --artifacts-path artifacts -c Debug -p:Platform="Any CPU" --framework net8.0 -r "win-x64" "src/{{.PROJECT_NAME}}/{{.PROJECT_NAME}}.csproj"'
      - cmd: 'dotnet publish -o "${NUGET_PACKAGE_PATH:-{{.PROJECT_DIR}}/.deploy}" --artifacts-path artifacts -c Debug -p:Platform="Any CPU" --framework net8.0 -r "win-x64" "src/{{.PROJECT_NAME}}.Tests/{{.PROJECT_NAME}}.Tests.csproj"'

  init:
    cmds:
      - task: init-git

  init-git:
    cmds:
      - cmd: git -C "{{.PROJECT_DIR}}" submodule init
      - cmd: git -C "{{.PROJECT_DIR}}" submodule update --init --recursive
    status:
      - 'test -f "src/MarkMpn.FetchXmlToWebAPI/MarkMpn.FetchXmlToWebAPI.sln"'

  clean:
    cmds:
      - task: remove-cache
        vars: { TARGET: "{{.PROJECT_DIR}}/.build" }
      - task: remove-cache
        vars: { TARGET: "{{.PROJECT_DIR}}/TestResults" }
      - task: remove-cache
        vars: { TARGET: "{{.PROJECT_DIR}}/bin" }

  copy-file:
    deps: []
    internal: true
    required: [SOURCE, TARGET_DIR]
    cmds:
      - cmd: '{{if eq .OS "Windows_NT"}}cmd /d /c if not exist "{{fromSlash .TARGET_DIR}}" mkdir "{{fromSlash .TARGET_DIR}}"{{end}}'
        status:
          - 'test -d "{{.TARGET_DIR}}"'
      - cmd: '{{if eq .OS "Windows_NT"}}cmd /d /c copy /Y "{{fromSlash .SOURCE}}" "{{fromSlash .TARGET_DIR}}"{{end}}'
        timeout: 5s

  remove-cache:
    deps: []
    internal: true
    required: [TARGET]
    status:
      - 'test ! -d "{{.TARGET}}"'
      - 'test ! -f "{{.TARGET}}"'
    cmds:
      - cmd: '{{if eq .OS "Windows_NT"}}cmd /d /c if exist "{{fromSlash .TARGET}}" rmdir /q /s "{{fromSlash .TARGET}}"{{end}}'
        timeout: 5s
      - cmd: '{{if eq .OS "Windows_NT"}}cmd /d /c if exist "{{fromSlash .TARGET}}" del "{{fromSlash .TARGET}}"{{end}}'
        timeout: 5s
